name: Find Last model and deploy

on:
  workflow_dispatch:

jobs:
  job1:
    name: Find-latest-model
    runs-on: ubuntu-latest
    outputs:
      model_name: ${{ steps.set_output.outputs.model_name }}
      model_version: ${{ steps.set_output.outputs.model_version }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install ML extension
        run: az extension add -n ml -y

      - name: Get latest model
        id: get_model
        run: |
          model_info=$(az ml model list \
            --resource-group ml_studio_rg \
            --workspace-name ml_work_place_1 \
            --query "[?starts_with(name, 'production-model-training') && status=='Completed'] | [-1]" \
            -o json)

          model_name=$(echo "$model_info" | jq -r '.[0].name')
          model_version=$(echo "$model_info" | jq -r '.[0].version')

          echo "model_name=$model_name" >> $GITHUB_ENV
          echo "model_version=$model_version" >> $GITHUB_ENV
          echo "model_name=$model_name" >> $GITHUB_OUTPUT
          echo "model_version=$model_version" >> $GITHUB_OUTPUT

      - name: Set output
        id: set_output
        run: |
          echo "model_name=${{ env.model_name }}" >> $GITHUB_OUTPUT
          echo "model_version=${{ env.model_version }}" >> $GITHUB_OUTPUT

  job2:
    name: Deploy model
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Use model info
        run: |
          echo "Using model: ${{ needs.job1.outputs.model_name }}:${{ needs.job1.outputs.model_version }}"
